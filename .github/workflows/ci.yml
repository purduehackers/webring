name: CI

on:
  push:
    paths:
      - "src/**"
      - "tests/**"
      - "examples/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - "build.rs"
      - ".github/workflows/ci.yml"
  pull_request:
    branches:
      - master
      - rust
      - "release/*"

env:
  RUST_BACKTRACE: short

jobs:
  clippy:
    name: Lint code
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: '-D warnings'
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Lint code
        run: cargo clippy --all-targets --workspace --locked

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --check --all

  test:
    name: Run tests
    runs-on: ubuntu-latest
    environment: Testing
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      DISCORD_PING_USER_ID: ${{ secrets.DISCORD_PING_USER_ID }}
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Run default tests
        run: cargo test --workspace --all-targets --no-fail-fast --locked

      - name: Run ignored tests
        run: cargo test --workspace --all-targets --no-fail-fast --locked -- --ignored

  # Adding this because we don't want to run the whole build workflow on each
  # push
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Compile project
        run: cargo build --workspace --all-targets --release --locked
