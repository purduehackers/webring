name: Build binaries

on:
  workflow_call:
  push:
    branches:
      - 'release/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'release/*'

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short
  RUSTFLAGS: '-D warnings'

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: ph-webring-x86_64-windows.zip

          - os: windows-latest
            target: i686-pc-windows-msvc
            artifact: ph-webring-i686-windows.zip

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact: ph-webring-aarch64-windows.zip

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: ph-webring-x86_64-macos.tar.gz

          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: ph-webring-aarch64-macos.tar.gz

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: ph-webring-x86_64-linux-gnu.tar.gz

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: ph-webring-aarch64-linux-gnu.tar.gz
            use-cross: true

          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            artifact: ph-webring-armv7hf-linux-gnu.tar.gz
            use-cross: true

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact: ph-webring-x86_64-linux-musl.tar.gz

    steps:
      - name: Install musl-gcc
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get install musl-tools

      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Compile
        if: ${{ matrix.use-cross != true }}
        run: cargo build --target ${{ matrix.target }} --release --locked

      - name: Install cross
        if: ${{ matrix.use-cross == true }}
        run: cargo install cross

      - name: Compile (using cross)
        if: ${{ matrix.use-cross == true }}
        run: cross build --target ${{ matrix.target }} --release --locked

      - name: Create archive (Windows)
        if: ${{ contains(matrix.os, 'windows') }}
        run: ${{ format('Compress-Archive target/{0}/release/ph-webring.exe {1}', matrix.target, matrix.artifact) }}

      - name: Create archive (macOS)
        if: ${{ contains(matrix.os, 'macos') }}
        run: ${{ format('gtar -czvf {1} -C target/{0}/release ph-webring', matrix.target, matrix.artifact) }}

      - name: Create archive (Linux)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: ${{ format('tar -czvf {1} -C target/{0}/release ph-webring', matrix.target, matrix.artifact) }}

      - name: Upload archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
